openapi: 3.0.0
info:
  title: URL Shortening Service API
  description: This service provides APIs for URL shortening.
  version: "1.0.0"
servers:
  - url: "https://your-service-domain.com/"
tags:
  - name: URL Shortening
paths:
  /{slug}:
    get:
      summary: Redirect to original URL
      description: Redirects to the original URL corresponding to the given slug.
      tags:
        - URL Shortening
      parameters:
        - name: slug
          in: path
          required: true
          schema:
            type: string
          description: The slug representing the shortened URL.
      responses:
        "302":
          description: Found. Redirecting to the original URL.
          headers:
            Location:
              schema:
                type: string
              description: The URL to redirect to.
        "404":
          description: Not found. The slug does not exist.
          content:
            application/problem+json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    enum: ["tag:censacrof@github.com:SlugNotFound"]
  /shorten:
    post:
      summary: Create shortened URL
      description: Creates new shortened URL with given slug
      tags:
        - URL Shortening
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ShortenedUrl"
      responses:
        "204":
          description: The URL and slug are valid and available.
        "400":
          description: Bad request. The provided slug or URL is invalid.
          content:
            application/problem+json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    enum:
                      [
                        "tag:censacrof@github.com:InvalidSlug",
                        "tag:censacrof@github.com:InvalidURL",
                      ]
        "409":
          description: Conflict. The slug is already in use.
          content:
            application/problem+json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    enum: ["tag:censacrof@github.com:SlugAlreadyInUse"]
  /validate:
    post:
      summary: Validate URL and slug
      description: Checks if the passed URL and slug are available and valid without creating anything in the database.
      tags:
        - URL Shortening
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ShortenedUrl"
      responses:
        "204":
          description: The URL and slug are valid and available.
        "400":
          description: Bad request. The provided slug or URL is invalid.
          content:
            application/problem+json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    enum:
                      [
                        "tag:censacrof@github.com:InvalidSlug",
                        "tag:censacrof@github.com:InvalidURL",
                      ]
        "409":
          description: Conflict. The slug is already in use.
          content:
            application/problem+json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    enum: ["tag:censacrof@github.com:SlugAlreadyInUse"]
components:
  schemas:
    ShortenedUrl:
      type: object
      properties:
        slug:
          type: string
        url:
          type: string
          format: URL
      required:
        - url
        - slug
