openapi: 3.0.0
info:
  title: URL Shortening Service API
  description: This service provides APIs for URL shortening.
  version: "1.0.0"
servers:
  - url: "https://your-service-domain.com/"
tags:
  - name: URL Shortening
paths:
  /{slug}:
    get:
      summary: Redirect to original URL
      description: Redirects to the original URL corresponding to the given slug.
      tags:
        - URL Shortening
      parameters:
        - name: slug
          in: path
          required: true
          schema:
            type: string
          description: The slug representing the shortened URL.
      responses:
        "302":
          description: Found. Redirecting to the original URL.
          headers:
            Location:
              schema:
                type: string
              description: The URL to redirect to.
        "404":
          description: Not found. The slug does not exist.
  /shorten:
    post:
      summary: Create a new shortened URL
      description: Creates a new shortened URL entry in the database.
      tags:
        - URL Shortening
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                url:
                  type: string
                  format: uri
                  description: The original URL to be shortened.
                slug:
                  type: string
                  description: The desired slug for the shortened URL. Must be unique.
              required:
                - url
                - slug
      responses:
        "200":
          description: Shortened URL created successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Shortened URL created successfully.
                  shortenedUrl:
                    type: string
                    example: "https://your-service-domain.com/example"
        "400":
          description: Bad request. The provided slug or URL is invalid.
        "409":
          description: Conflict. The slug is already in use.
  /validate:
    post:
      summary: Validate URL and slug
      description: Checks if the passed URL and slug are available and valid without creating anything in the database.
      tags:
        - URL Shortening
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                url:
                  type: string
                  format: uri
                  description: The original URL to be validated.
                slug:
                  type: string
                  description: The slug to be validated for uniqueness and format.
              required:
                - url
                - slug
      responses:
        "200":
          description: The URL and slug are valid and available.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: The URL and slug are valid and available.
        "400":
          description: Bad request. The provided slug or URL is invalid.
        "409":
          description: Conflict. The slug is already in use.
